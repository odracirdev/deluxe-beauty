---
const { href, color } = Astro.props;
---

<a
  href={href}
  target="_self"
  rel="noopener noreferrer"
  class:list={[
    "button",
    {
      "white-pink": color === "white-pink",
      "white-black": color === "white-black",
      "pink-black": color === "pink-black",
    },
  ]}
>
  <slot />
</a>

<style>
  .button {
    max-width: fit-content;
    border-radius: 0.75rem;
    padding: 0.5rem 1.25rem;
    cursor: pointer;
    transition: all 0.3s ease-in-out;
  }

  .white-pink {
    background: var(--white);
    color: var(--black);
    border: 2px solid var(--primary-color);
    box-shadow: 0 0 0 0 var(--primary-color);

    &:hover {
      transform: translateY(-4px) translateX(-2px);
      box-shadow: 2px 5px 0 0 var(--primary-color);
    }

    &:active {
      transform: translateY(2px) translateX(1px);
      box-shadow: 0 0 0 0 var(--primary-color);
    }
  }

  .white-black {
    background: var(--white);
    color: var(--black);
    border: 2px solid var(--black);
    box-shadow: 0 0 0 0 var(--black);

    &:hover {
      transform: translateY(-4px) translateX(-2px);
      box-shadow: 2px 5px 0 0 var(--black);
    }

    &:active {
      transform: translateY(2px) translateX(1px);
      box-shadow: 0 0 0 0 var(--black);
    }
  }

  .pink-black {
    background: var(--primary-color);
    color: var(--white);
    border: 2px solid var(--black);
    box-shadow: 0 0 0 0 var(--black);

    &:hover {
      transform: translateY(-4px) translateX(-2px);
      box-shadow: 2px 5px 0 0 var(--black);
    }

    &:active {
      transform: translateY(2px) translateX(1px);
      box-shadow: 0 0 0 0 var(--black);
    }
  }
</style>
